<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cpaplib="clr-namespace:cpaplib;assembly=cpap-lib"
             x:Class="cpap_app.Views.DailySessionsList"
             mc:Ignorable="d"
             d:DesignWidth="400"
             d:DesignHeight="450"
             x:DataType="cpaplib:DailyReport">
    <UserControl.Styles>
        <StyleInclude Source="/Styling/GridStyles.axaml" />
        <Style Selector="Border.SelectionRect">
            <Setter Property="Cursor" Value="Hand" />
        </Style>
    </UserControl.Styles>
    
    <Grid>
        <ItemsRepeater Name="lstSessions">
            <ItemsRepeater.ItemTemplate>
                <DataTemplate DataType="{x:Type cpaplib:Session}">
                    <Border Classes="SelectionRect" Tapped="lstSessions_Tapped" Tag="{Binding}">
                        
                        <!-- 
                        NOTE: We can't use IsSharedSizeScope="True" here, and are forced to use fixed-width columns, because
                        Avalonia apparently has an issue with layouts where because this control often starts out outside of the
                        visible area of a ScrollViewer, the layout engine enters an infinite layout cycle and brings the application
                        to a screeching halt.
                        
                        Similarly, we cannot rely on data binding to set whether a row is visible or not, and must eliminate visible
                        rows in the data model, which is why this control has a different data model than nearly identical controls
                        elsewhere in the application.  
`                       --> 
                        <Grid RowDefinitions="22" ColumnDefinitions="85,190,85">
                            <TextBlock Grid.Column="0" Text="{Binding StartTime, Mode=OneWay, StringFormat={}{0:d}}"
                                       TextWrapping="NoWrap" />
                            <TextBlock Grid.Column="1" TextWrapping="NoWrap">
                                <TextBox.Text>
                                    <MultiBinding StringFormat="{}{0:T} 🠚 {1:T}" Mode="OneWay">
                                        <Binding Path="StartTime" />
                                        <Binding Path="EndTime" />
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBlock>
                            <TextBlock Grid.Column="2" Text="{Binding Duration, Mode=OneWay}" TextWrapping="NoWrap" />
                        </Grid>
                        
                    </Border>
                </DataTemplate>
            </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
    </Grid>
    
</UserControl>